#!/bin/bash
#
# usage:
# ### install and source bashrc to get new functions
# npm install -g junc
# junc-install
# . ~/.bashrc
#
# ### use similiar to pushd / popd to move to a temporary junctioned directories
#
# pushj [directory-path]
# popj
#
# cdj [directory]
#
# cpj [target-directory] destination-directory

unix_name="$(uname)"
shopt -s nocasematch
case "$unix_name" in
  *windows*|*ming*)
    PLATFORM="windows"
    ;;
esac


pushj() {
  local DIRECTORY_PATH="${1-"$PWD"}"
  if [ "$PLATFORM" = "windows" ]; then
    printf -- "%s <- " "$DIRECTORY_PATH"
    pushd "$(junc "$JUNC_PATH")"
  else
    pushd "$DIRECTORY_PATH"
  fi
}

popj() {
  if [ "$PLATFORM" = "windows" ]; then
    local JUNC_PATH="$PWD"
    popd
    junc -d "$JUNC_PATH"
  else
    popd
  fi
}

cdj() {
  if [ "$PLATFORM" = "windows" ]; then
    cd "$(junc "$@")"
  else
    cd "$@"
  fi
}

# Copy directory 1 contents to directory 2 using junctions (cp -rf)
cpj() {
  local COPY_FROM_ROOT=""
  local COPY_TO_ROOT=""
  if [ $# -eq 2 ]; then
    local COPY_FROM_ROOT="$1"
    local COPY_TO_ROOT="$2"
  elif [ $# -eq 1 ]; then
    local COPY_FROM_ROOT="$PWD"
    local COPY_TO_ROOT="$1"
  else
    >&2 printf -- "usage: cpj [target_directory-%s] destination_directory\n" "$PWD"
    exit 1
  fi
  if [ "$PLATFORM" = "windows" ]; then
    junc-copy "$COPY_FROM_ROOT" "$COPY_TO_ROOT"
  else
    cp -rf
  fi
}

export -f pushj
export -f popj
export -f cdj
export -f cpj